// =============================================================================
// BUTTONS STYLING - Solomon's Responsibility
// =============================================================================


@use '../variables/config' as config;
@use '../variables/colors' as colors;

// Base button styles
button,
.btn {
  display: inline-block;
  padding: config.$button-padding-y config.$button-padding-x;
  font-size: config.$font-size-base;
  font-weight: config.$font-weight-normal;
  line-height: config.$line-height-base;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: config.$border-width solid transparent;
  border-radius: config.$border-radius;
  background-color: colors.$primary-color;
  color: colors.$white;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  &:hover {
    color: colors.$white;
    background-color: darken(colors.$primary-color, 7.5%);
    border-color: darken(colors.$primary-color, 10%);
  }

  &:focus {
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(colors.$primary-color, 0.25);
  }

  &:disabled,
  &.disabled {
    opacity: 0.65;
    cursor: not-allowed;
    pointer-events: none;
  }

  &:active,
  &.active {
    background-color: darken(colors.$primary-color, 10%);
    border-color: darken(colors.$primary-color, 12.5%);
    box-shadow: inset 0 3px 5px rgba(colors.$black, 0.125);
  }
}

// Button color variants
.btn-primary {
  background-color: colors.$primary-color;
  border-color: colors.$primary-color;
  color: colors.$white;

  &:hover {
    background-color: darken(colors.$primary-color, 7.5%);
    border-color: darken(colors.$primary-color, 10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$primary-color, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$primary-color, 10%);
    border-color: darken(colors.$primary-color, 12.5%);
  }
}

.btn-secondary {
  background-color: colors.$secondary-color;
  border-color: colors.$secondary-color;
  color: colors.$white;

  &:hover {
    background-color: darken(colors.$secondary-color, 7.5%);
    border-color: darken(colors.$secondary-color, 10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$secondary-color, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$secondary-color, 10%);
    border-color: darken(colors.$secondary-color, 12.5%);
  }
}

.btn-success {
  background-color: colors.$success-color;
  border-color: colors.$success-color;
  color: colors.$white;

  &:hover {
    background-color: darken(colors.$success-color, 7.5%);
    border-color: darken(colors.$success-color, 10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$success-color, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$success-color, 10%);
    border-color: darken(colors.$success-color, 12.5%);
  }
}

.btn-danger {
  background-color: colors.$danger-color;
  border-color: colors.$danger-color;
  color: colors.$white;

  &:hover {
    background-color: darken(colors.$danger-color, 7.5%);
    border-color: darken(colors.$danger-color, 10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$danger-color, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$danger-color, 10%);
    border-color: darken(colors.$danger-color, 12.5%);
  }
}

.btn-warning {
  background-color: colors.$warning-color;
  border-color: colors.$warning-color;
  color: colors.$black;

  &:hover {
    background-color: darken(colors.$warning-color, 7.5%);
    border-color: darken(colors.$warning-color, 10%);
    color: colors.$black;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$warning-color, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$warning-color, 10%);
    border-color: darken(colors.$warning-color, 12.5%);
  }
}

.btn-info {
  background-color: colors.$info-color;
  border-color: colors.$info-color;
  color: colors.$white;

  &:hover {
    background-color: darken(colors.$info-color, 7.5%);
    border-color: darken(colors.$info-color, 10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$info-color, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$info-color, 10%);
    border-color: darken(colors.$info-color, 12.5%);
  }
}

.btn-light {
  background-color: colors.$gray-100;
  border-color: colors.$gray-100;
  color: colors.$black;

  &:hover {
    background-color: darken(colors.$gray-100, 7.5%);
    border-color: darken(colors.$gray-100, 10%);
    color: colors.$black;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$gray-100, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$gray-100, 10%);
    border-color: darken(colors.$gray-100, 12.5%);
  }
}

.btn-dark {
  background-color: colors.$gray-800;
  border-color: colors.$gray-800;
  color: colors.$white;

  &:hover {
    background-color: darken(colors.$gray-800, 7.5%);
    border-color: darken(colors.$gray-800, 10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$gray-800, 0.5);
  }

  &:active,
  &.active {
    background-color: darken(colors.$gray-800, 10%);
    border-color: darken(colors.$gray-800, 12.5%);
  }
}

// Button sizes
.btn-sm {
  padding: config.$button-padding-y-sm config.$button-padding-x-sm;
  font-size: config.$font-size-sm;
  border-radius: config.$border-radius-sm;
}

.btn-lg {
  padding: config.$button-padding-y-lg config.$button-padding-x-lg;
  font-size: config.$font-size-lg;
  border-radius: config.$border-radius-lg;
}

// Outline button variants
.btn-outline-primary {
  background-color: transparent;
  color: colors.$primary-color;
  border-color: colors.$primary-color;

  &:hover {
    background-color: colors.$primary-color;
    border-color: colors.$primary-color;
    color: colors.$white;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$primary-color, 0.5);
  }
}

.btn-outline-secondary {
  background-color: transparent;
  color: colors.$secondary-color;
  border-color: colors.$secondary-color;

  &:hover {
    background-color: colors.$secondary-color;
    border-color: colors.$secondary-color;
    color: colors.$white;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$secondary-color, 0.5);
  }
}

.btn-outline-success {
  background-color: transparent;
  color: colors.$success-color;
  border-color: colors.$success-color;

  &:hover {
    background-color: colors.$success-color;
    border-color: colors.$success-color;
    color: colors.$white;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$success-color, 0.5);
  }
}

.btn-outline-danger {
  background-color: transparent;
  color: colors.$danger-color;
  border-color: colors.$danger-color;

  &:hover {
    background-color: colors.$danger-color;
    border-color: colors.$danger-color;
    color: colors.$white;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$danger-color, 0.5);
  }
}

.btn-outline-warning {
  background-color: transparent;
  color: colors.$warning-color;
  border-color: colors.$warning-color;

  &:hover {
    background-color: colors.$warning-color;
    border-color: colors.$warning-color;
    color: colors.$black;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$warning-color, 0.5);
  }
}

.btn-outline-info {
  background-color: transparent;
  color: colors.$info-color;
  border-color: colors.$info-color;

  &:hover {
    background-color: colors.$info-color;
    border-color: colors.$info-color;
    color: colors.$white;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$info-color, 0.5);
  }
}

.btn-outline-light {
  background-color: transparent;
  color: colors.$gray-100;
  border-color: colors.$gray-100;

  &:hover {
    background-color: colors.$gray-100;
    border-color: colors.$gray-100;
    color: colors.$black;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$gray-100, 0.5);
  }
}

.btn-outline-dark {
  background-color: transparent;
  color: colors.$gray-800;
  border-color: colors.$gray-800;

  &:hover {
    background-color: colors.$gray-800;
    border-color: colors.$gray-800;
    color: colors.$white;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(colors.$gray-800, 0.5);
  }
}

// Button links
.btn-link {
  font-weight: config.$font-weight-normal;
  color: colors.$primary-color;
  text-decoration: none;
  background-color: transparent;
  border: 0;

  &:hover {
    color: darken(colors.$primary-color, 15%);
    text-decoration: underline;
  }

  &:focus {
    text-decoration: underline;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: colors.$text-muted;
    pointer-events: none;
  }
}

// Block button
.btn-block {
  display: block;
  width: 100%;
}

// Button groups
.btn-group {
  position: relative;
  display: inline-flex;
  vertical-align: middle;

  .btn {
    position: relative;
    flex: 1 1 auto;

    &:not(:first-child) {
      margin-left: -1px;
    }

    &:not(:last-child):not(.dropdown-toggle) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 1;
    }
  }
}

.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  .btn {
    width: 100%;

    &:not(:first-child) {
      margin-top: -1px;
      margin-left: 0;
    }

    &:not(:last-child) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:not(:first-child) {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  }
}