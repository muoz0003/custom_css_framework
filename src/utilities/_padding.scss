// =============================================================================
// PADDING UTILITIES - Chuhong's Responsibility
// =============================================================================


@use '../variables/config' as config;
@use '../variables/colors' as colors;


$spacers: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 1rem,
  4: 1.5rem,
  5: 3rem
) !default;

// Use config spacers if available, otherwise use local spacers
$spacer-map: if(variable-exists('config.$spacers'), config.$spacers, $spacers);

// Generate all sides padding utilities
@each $key, $value in $spacer-map {
  .p-#{$key} {
    padding: $value !important;
  }
}

// Generate directional padding utilities
// Padding Top
@each $key, $value in $spacer-map {
  .pt-#{$key} {
    padding-top: $value !important;
  }
}

// Padding Bottom
@each $key, $value in $spacer-map {
  .pb-#{$key} {
    padding-bottom: $value !important;
  }
}

// Padding Left
@each $key, $value in $spacer-map {
  .pl-#{$key} {
    padding-left: $value !important;
  }
}

// Padding Right
@each $key, $value in $spacer-map {
  .pr-#{$key} {
    padding-right: $value !important;
  }
}

// Generate axis padding utilities
// Padding X-axis (left and right)
@each $key, $value in $spacer-map {
  .px-#{$key} {
    padding-left: $value !important;
    padding-right: $value !important;
  }
}

// Padding Y-axis (top and bottom)
@each $key, $value in $spacer-map {
  .py-#{$key} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }
}

// Generate responsive padding utilities
$breakpoints: (
  sm: config.$breakpoint-sm,
  md: config.$breakpoint-md,
  lg: config.$breakpoint-lg,
  xl: config.$breakpoint-xl
);

@each $breakpoint-name, $breakpoint-value in $breakpoints {
  @media (min-width: $breakpoint-value) {
    // All sides padding
    @each $key, $value in $spacer-map {
      .p-#{$breakpoint-name}-#{$key} {
        padding: $value !important;
      }
    }

    // Directional padding
    @each $key, $value in $spacer-map {
      .pt-#{$breakpoint-name}-#{$key} {
        padding-top: $value !important;
      }
      
      .pb-#{$breakpoint-name}-#{$key} {
        padding-bottom: $value !important;
      }
      
      .pl-#{$breakpoint-name}-#{$key} {
        padding-left: $value !important;
      }
      
      .pr-#{$breakpoint-name}-#{$key} {
        padding-right: $value !important;
      }
    }

    // Axis padding
    @each $key, $value in $spacer-map {
      .px-#{$breakpoint-name}-#{$key} {
        padding-left: $value !important;
        padding-right: $value !important;
      }
      
      .py-#{$breakpoint-name}-#{$key} {
        padding-top: $value !important;
        padding-bottom: $value !important;
      }
    }
  }
}

// Auto padding utilities
.p-auto {
  padding: auto !important;
}

.pt-auto {
  padding-top: auto !important;
}

.pb-auto {
  padding-bottom: auto !important;
}

.pl-auto {
  padding-left: auto !important;
}

.pr-auto {
  padding-right: auto !important;
}

.px-auto {
  padding-left: auto !important;
  padding-right: auto !important;
}

.py-auto {
  padding-top: auto !important;
  padding-bottom: auto !important;
}

// Responsive auto padding utilities
@each $breakpoint-name, $breakpoint-value in $breakpoints {
  @media (min-width: $breakpoint-value) {
    .p-#{$breakpoint-name}-auto {
      padding: auto !important;
    }

    .pt-#{$breakpoint-name}-auto {
      padding-top: auto !important;
    }

    .pb-#{$breakpoint-name}-auto {
      padding-bottom: auto !important;
    }

    .pl-#{$breakpoint-name}-auto {
      padding-left: auto !important;
    }

    .pr-#{$breakpoint-name}-auto {
      padding-right: auto !important;
    }

    .px-#{$breakpoint-name}-auto {
      padding-left: auto !important;
      padding-right: auto !important;
    }

    .py-#{$breakpoint-name}-auto {
      padding-top: auto !important;
      padding-bottom: auto !important;
    }
  }
}