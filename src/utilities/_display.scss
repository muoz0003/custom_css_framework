// =============================================================================
// DISPLAY UTILITIES - Luz Helena's Responsibility
// =============================================================================

// Step 1: Import the variables (David will create these)
@use '../variables/config' as config;
@use '../variables/colors' as colors;




.d-none {
  display: none;
}
.d-block {
  display: block;
}
.d-inline {
  display: inline;
}
.d-inline-block {
  display: inline-block;
}
.d-flex {
  display: flex;
}
.d-inline-flex {
  display: inline-flex;
}



.flex-row {
  flex-direction: row;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-nowrap {
  flex-wrap: nowrap;
}


.justify-content-start {
  justify-content: flex-start;
}
.justify-content-center {
  justify-content: center;
}
.justify-content-end {
  justify-content: flex-end;
}
.justify-content-between {
  justify-content: space-between;
}
.align-items-start {
  align-items: flex-start;
}
.align-items-center {
  align-items: center;
}
.align-items-end {
  align-items: flex-end;
}




.d-none {
  display: none !important;
}
.d-block {
  display: block !important;
}
.d-flex {
  display: flex !important;
}

.d-none{ 
  display: none !important; 
}
.d-block  { 
  display: block !important; 
}
.d-inline  { 
  display: inline !important; 
}
.d-inline-block {
   display: inline-block !important; 
  }
.d-flex { 
  display: flex !important; 
}
.d-inline-flex { 
  display: inline-flex !important; 
}

@each $breakpoint, $min-width in (
  sm: config.$breakpoint-sm,
  md: config.$breakpoint-md,
  lg: config.$breakpoint-lg,
  xl: config.$breakpoint-xl
) {
  @media (min-width: #{$min-width}) {
    .d-#{$breakpoint}-none        { display: none !important; }
    .d-#{$breakpoint}-block       { display: block !important; }
    .d-#{$breakpoint}-inline      { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-flex        { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
  }
}

// NOTES:
// - Use !important to ensure utility classes override other styles
// - These utilities are commonly used for layout and positioning
// - Test flex utilities with different content to ensure proper behavior
// - Display utilities are essential for responsive design
// - Consider responsive variants for better mobile experience